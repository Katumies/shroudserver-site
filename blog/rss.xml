<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/">
    <channel>
        <title>ShroudServer blogdocs Blog</title>
        <link>https://katumies.github.io/shroudserver-site/blog</link>
        <description>ShroudServer blogdocs Blog</description>
        <lastBuildDate>Sun, 19 Oct 2025 00:00:00 GMT</lastBuildDate>
        <docs>https://validator.w3.org/feed/docs/rss2.html</docs>
        <generator>https://github.com/jpmonette/feed</generator>
        <language>en</language>
        <item>
            <title><![CDATA[ENet modifications and reverse engineering]]></title>
            <link>https://katumies.github.io/shroudserver-site/blog/2025/10/19/enet-modifications</link>
            <guid>https://katumies.github.io/shroudserver-site/blog/2025/10/19/enet-modifications</guid>
            <pubDate>Sun, 19 Oct 2025 00:00:00 GMT</pubDate>
            <description><![CDATA[Technical deep dive into ENet modifications needed for ShroudServer.]]></description>
            <content:encoded><![CDATA[<h2 class="anchor anchorTargetStickyNavbar_Vzrq" id="enet-modifications">Enet modifications<a href="https://katumies.github.io/shroudserver-site/blog/2025/10/19/enet-modifications#enet-modifications" class="hash-link" aria-label="Direct link to Enet modifications" title="Direct link to Enet modifications" translate="no">​</a></h2>
<p>Yesterday and today, I have been working on modifying <a href="https://github.com/Molth/enet-csharp" target="_blank" rel="noopener noreferrer" class="">ENet-CSharp</a> library to work with SotA.
I'll go through the changes needed and why they were needed.</p>
<p>Warning, this is going to be a very technical post.</p>
<h3 class="anchor anchorTargetStickyNavbar_Vzrq" id="background">Background<a href="https://katumies.github.io/shroudserver-site/blog/2025/10/19/enet-modifications#background" class="hash-link" aria-label="Direct link to Background" title="Direct link to Background" translate="no">​</a></h3>
<p>SotA uses Photon networking for all the networking needs. The server they are running is Photon Server v4, and the client
uses Photon Unity Networking V1. How do I know all this? Well, I took a look at the game files, and there it is, Photon3Unity3D.dll.
This is the client library for Photon networking. I have spent a few years, with varying interest, to dig out how the game works
and more importantly, how the networking works.</p>
<h3 class="anchor anchorTargetStickyNavbar_Vzrq" id="reverse-engineering">Reverse engineering<a href="https://katumies.github.io/shroudserver-site/blog/2025/10/19/enet-modifications#reverse-engineering" class="hash-link" aria-label="Direct link to Reverse engineering" title="Direct link to Reverse engineering" translate="no">​</a></h3>
<p>Hours and hours of using Wireshark, DotPeek, DnSpy and other tools, I have managed to get a good understanding
of the networking protocol used by the game. There is not a lot of public information about the protocol used by Photon,
so I had to do a lot of things by myself. Luckily, this year, there been some other projects that have been working on
Photon emulation, and I have been able to learn from them as well. However, none of those tackled the actual ENet modification,
but rather focused on emulating the server. Nothing wrong about that, but I wanted to go deeper.</p>
<h4 class="anchor anchorTargetStickyNavbar_Vzrq" id="actual-reverse-engineering">Actual reverse engineering<a href="https://katumies.github.io/shroudserver-site/blog/2025/10/19/enet-modifications#actual-reverse-engineering" class="hash-link" aria-label="Direct link to Actual reverse engineering" title="Direct link to Actual reverse engineering" translate="no">​</a></h4>
<p>What do I actually do when I say reverse engineering?</p>
<p>For example, the last few days, I have been working on understanding how the reliable messages are sent and received and also,
how the acknowledgements are handled. This required hours of looking and tracing the code to actually understand that it really
matters that acknowledgements are sent in a specific way. This is one of the modifications ENet needed. I also spent used Wireshark
to capture and record the actual packets sent by the client, when it's connecting at the game start and also, what the server answers.
I saved those packets and used Wireshark to analyze them.</p>
<p>Normally, all networking messages are obfuscated, but I have disabled that with the BepInEx plugin I have created for the client.
They obfuscate it by adding a random variable number of random bytes to the start and end or the actual message.
Then there are a few places where they drop byte '55' (0x37) to work as a marker. Nothing fancy, but it works, I guess.
It surely stops casual packet sniffing. However, they could have enabled encryption also, or instead of sending JSON data,
they could have used a binary format.</p>
<h4 class="anchor anchorTargetStickyNavbar_Vzrq" id="bepinex-plugin">BepInEx plugin<a href="https://katumies.github.io/shroudserver-site/blog/2025/10/19/enet-modifications#bepinex-plugin" class="hash-link" aria-label="Direct link to BepInEx plugin" title="Direct link to BepInEx plugin" translate="no">​</a></h4>
<p>To help with the reverse engineering, I created a BepInEx plugin for the client. It's nothing fancy, but it changes all
the addresses the client uses to connect servers and point those addresses to my localhost. I also have added logging here
and there to get more information about what the client is doing. I found a way to swap the encryption keys, so I don't have
to disable encryption used for login passwords etc. I patch the obfuscation method, so it takes a byte array and
just returns it as is, instead of adding random bytes.</p>
<p>BepInEx is a great modding framework for Unity games, and we are going to use it a lot in this project.
So much could be done with it already.</p>
<ul>
<li class="">adding custom UI's<!-- -->
<ul>
<li class="">totally new windows that aggregate information from multiple sources</li>
</ul>
</li>
<li class="">modding existing UI's<!-- -->
<ul>
<li class="">sorting changes</li>
<li class="">adding new buttons that simplify things</li>
</ul>
</li>
<li class="">adding new Lua features<!-- -->
<ul>
<li class="">literally anything can be connected to lua scripts within the game data</li>
</ul>
</li>
<li class="">fixing existing issues with the client.</li>
</ul>
<p>I did say, that this is going to be a technical post, so for the fellow nerds, here is the code snippet that patches the obfuscation method:</p>
<div class="language-csharp codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-csharp codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token comment" style="color:#999988;font-style:italic">// Find the type information for the PortMessage class</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token class-name">Type</span><span class="token plain"> type </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> Type</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">GetType</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"Portalarium.Photon.PortMessage, Assembly-CSharp"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token comment" style="color:#999988;font-style:italic">// Use type information to get the MethodInfo for the CreateByteArrayData method</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token class-name">MethodInfo</span><span class="token plain"> createByteArrayDataMethodInfo </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> type</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">GetMethod</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"CreateByteArrayData"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> BindingFlags</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">NonPublic </span><span class="token operator" style="color:#393A34">|</span><span class="token plain"> BindingFlags</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">Static</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token comment" style="color:#999988;font-style:italic">// use Harmony to patch the method</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	</span><span class="token class-name keyword" style="color:#00009f">var</span><span class="token plain"> instance </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">new</span><span class="token plain"> </span><span class="token constructor-invocation class-name">Harmony</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"tester"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	instance</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">Patch</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		createByteArrayDataMethodInfo</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		</span><span class="token keyword" style="color:#00009f">new</span><span class="token plain"> </span><span class="token constructor-invocation class-name">HarmonyMethod</span><span class="token punctuation" style="color:#393A34">(</span><span class="token keyword" style="color:#00009f">typeof</span><span class="token punctuation" style="color:#393A34">(</span><span class="token type-expression class-name">PatchObfuscation</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">GetMethod</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"Prefix"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		</span><span class="token keyword" style="color:#00009f">null</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		</span><span class="token keyword" style="color:#00009f">null</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token comment" style="color:#999988;font-style:italic">// this is BepInEx Harmony patch class</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">   </span><span class="token keyword" style="color:#00009f">public</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">class</span><span class="token plain"> </span><span class="token class-name">PatchObfuscation</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token comment" style="color:#999988;font-style:italic">// Prefix, executed before the original method, with the ability to modify parameters, reroute execution or set return value.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token keyword" style="color:#00009f">public</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">static</span><span class="token plain"> </span><span class="token return-type class-name keyword" style="color:#00009f">bool</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">Prefix</span><span class="token punctuation" style="color:#393A34">(</span><span class="token keyword" style="color:#00009f">ref</span><span class="token plain"> </span><span class="token class-name">DataBuffer</span><span class="token plain"> __result</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token class-name">MethodBase</span><span class="token plain"> __originalMethod</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token class-name keyword" style="color:#00009f">char</span><span class="token class-name punctuation" style="color:#393A34">[</span><span class="token class-name punctuation" style="color:#393A34">]</span><span class="token plain"> SerializedData</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token class-name keyword" style="color:#00009f">int</span><span class="token plain"> length</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token comment" style="color:#999988;font-style:italic">// Here we create new return value for the method and instead of obfuscating the data, we just convert it to DataBuffer as is.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token class-name keyword" style="color:#00009f">byte</span><span class="token class-name punctuation" style="color:#393A34">[</span><span class="token class-name punctuation" style="color:#393A34">]</span><span class="token plain"> returnValue </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">new</span><span class="token plain"> </span><span class="token constructor-invocation class-name keyword" style="color:#00009f">byte</span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">length</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            Encoding</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">UTF8</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">GetBytes</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">SerializedData</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">0</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> length</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> returnValue</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">0</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token class-name">DataBuffer</span><span class="token plain"> dataBuffer </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">new</span><span class="token plain"> </span><span class="token constructor-invocation class-name">DataBuffer</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">returnValue</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            __result </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> dataBuffer</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token comment" style="color:#999988;font-style:italic">// return false means, that the original method is not executed.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> </span><span class="token boolean" style="color:#36acaa">false</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre></div></div>
<p>BepInEx is a really powerful tool, and I recommend it for anyone wanting to mod Unity games.</p>
<h4 class="anchor anchorTargetStickyNavbar_Vzrq" id="wireshark">Wireshark<a href="https://katumies.github.io/shroudserver-site/blog/2025/10/19/enet-modifications#wireshark" class="hash-link" aria-label="Direct link to Wireshark" title="Direct link to Wireshark" translate="no">​</a></h4>
<p>With Wireshark, I can see what kind of packets are sent between the client and the server. I use <a href="https://github.com/bennesp/photon-dissector" target="_blank" rel="noopener noreferrer" class="">photon-dissector</a>
with tiny modifications to make it work with this photon version. It is a sort of plugin for Wireshark that allows it to understand and decode
the Photon protocol.</p>
<p><img decoding="async" loading="lazy" alt="Wireshark screenshot" src="https://katumies.github.io/shroudserver-site/assets/images/wireshark-4932cf609fc8f195a89ab0e4e52d29b0.jpg" width="1502" height="758" class="img_ev3q"></p>
<h2 class="anchor anchorTargetStickyNavbar_Vzrq" id="enet-modifications-1">ENet modifications<a href="https://katumies.github.io/shroudserver-site/blog/2025/10/19/enet-modifications#enet-modifications-1" class="hash-link" aria-label="Direct link to ENet modifications" title="Direct link to ENet modifications" translate="no">​</a></h2>
<p>So, as previously stated, Photon is built on top of ENet. ENet is the actual networking part of the code. It reads and writes packets
to and from the sockets, using UDP protocol. I'm not going to cover UDP and socket programming, but I will cover the ENet part.
One thing to remember is that Photon is a HUGE software that can do so much more than just UDP networking, so we are not replacing all the
features of Photon, only the important ones, UDP layer.</p>
<h4 class="anchor anchorTargetStickyNavbar_Vzrq" id="main-differences">Main differences<a href="https://katumies.github.io/shroudserver-site/blog/2025/10/19/enet-modifications#main-differences" class="hash-link" aria-label="Direct link to Main differences" title="Direct link to Main differences" translate="no">​</a></h4>
<p>At this time, I can't even list all the differences because I may discover more in the future. However, SotA client accepts my
server and starts to communicate with it, so I can assume that the biggest differences have been fixed.</p>
<h5 class="anchor anchorTargetStickyNavbar_Vzrq" id="protocolcommands-are-almost-equal">ProtocolCommands are almost equal<a href="https://katumies.github.io/shroudserver-site/blog/2025/10/19/enet-modifications#protocolcommands-are-almost-equal" class="hash-link" aria-label="Direct link to ProtocolCommands are almost equal" title="Direct link to ProtocolCommands are almost equal" translate="no">​</a></h5>
<p>Realizing that the protocol at very low level is almost the same for both Photon and Enet, gave me the confidence that this is doable.
These are the protocol commands that are used by both libraries.</p>
<div class="theme-tabs-container tabs-container tabList__CuJ"><ul role="tablist" aria-orientation="horizontal" class="tabs"><li role="tab" tabindex="0" aria-selected="true" class="tabs__item tabItem_LNqP tabs__item--active">ENet</li><li role="tab" tabindex="-1" aria-selected="false" class="tabs__item tabItem_LNqP">Photon</li></ul><div class="margin-top--md"><div role="tabpanel" class="tabItem_Ymn6"><div class="language-csharp codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-csharp codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">public</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">enum</span><span class="token plain"> </span><span class="token class-name">ENetProtocolCommand</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    ENET_PROTOCOL_COMMAND_NONE </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">0</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    ENET_PROTOCOL_COMMAND_ACKNOWLEDGE </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">1</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    ENET_PROTOCOL_COMMAND_CONNECT </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">2</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    ENET_PROTOCOL_COMMAND_VERIFY_CONNECT </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">3</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    ENET_PROTOCOL_COMMAND_DISCONNECT </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">4</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    ENET_PROTOCOL_COMMAND_PING </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">5</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    ENET_PROTOCOL_COMMAND_SEND_RELIABLE </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">6</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    ENET_PROTOCOL_COMMAND_SEND_UNRELIABLE </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">7</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    ENET_PROTOCOL_COMMAND_SEND_FRAGMENT </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">8</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    ENET_PROTOCOL_COMMAND_SEND_UNSEQUENCED </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">9</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    ENET_PROTOCOL_COMMAND_BANDWIDTH_LIMIT </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">10</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    ENET_PROTOCOL_COMMAND_THROTTLE_CONFIGURE </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">11</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    ENET_PROTOCOL_COMMAND_SEND_UNRELIABLE_FRAGMENT </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">12</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    ENET_PROTOCOL_COMMAND_COUNT </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">13</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    ENET_PROTOCOL_COMMAND_MASK </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">0x0F</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre></div></div></div><div role="tabpanel" class="tabItem_Ymn6" hidden=""><div class="language-csharp codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-csharp codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">public</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">enum</span><span class="token plain"> </span><span class="token class-name">PhotonProtocolCommand</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    PHOTON_PROTOCOL_COMMAND_NONE </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">0</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    PHOTON_PROTOCOL_COMMAND_ACKNOWLEDGE </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">1</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    PHOTON_PROTOCOL_COMMAND_CONNECT </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">2</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    PHOTON_PROTOCOL_COMMAND_VERIFY_CONNECT </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">3</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    PHOTON_PROTOCOL_COMMAND_DISCONNECT </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">4</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    PHOTON_PROTOCOL_COMMAND_PING </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">5</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    PHOTON_PROTOCOL_COMMAND_SEND_RELIABLE </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">6</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    PHOTON_PROTOCOL_COMMAND_SEND_UNRELIABLE </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">7</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    PHOTON_PROTOCOL_COMMAND_SEND_FRAGMENT </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">8</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    PHOTON_PROTOCOL_COMMAND_SEND_UNSEQUENCED </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">9</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token comment" style="color:#999988;font-style:italic">//PHOTON_PROTOCOL_COMMAND_BANDWIDTH_LIMIT = 10,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token comment" style="color:#999988;font-style:italic">//PHOTON_PROTOCOL_COMMAND_THROTTLE_CONFIGURE = 11,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token comment" style="color:#999988;font-style:italic">//PHOTON_PROTOCOL_COMMAND_SEND_UNRELIABLE_FRAGMENT = 12,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    PHOTON_PROTOCOL_COMMAND_SEND_SERVERTIMESTAMP </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">12</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    PHOTON_PROTOCOL_COMMAND_COUNT </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">13</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    PHOTON_PROTOCOL_COMMAND_MASK </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">0x0F</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre></div></div></div></div></div>
<h5 class="anchor anchorTargetStickyNavbar_Vzrq" id="protocol-headers-differ">Protocol Headers differ<a href="https://katumies.github.io/shroudserver-site/blog/2025/10/19/enet-modifications#protocol-headers-differ" class="hash-link" aria-label="Direct link to Protocol Headers differ" title="Direct link to Protocol Headers differ" translate="no">​</a></h5>
<p>A Big difference between the two protocols is the actual protocol headers used. Photon has more information in the header.
ENet uses bit-fields to encode data to, for example, peerID. So, the actual maximum peerID is 0xFFF because the last bit
is used for bit flags.</p>
<p>Photon has explicit bytes reserved for things needed. It looks like ENet is more efficient, but Photon delivers much more
complicated data, and it packs the data better, so in the real world, it's probably more efficient after all.</p>
<p>PeerID functionality and commandCount things caused refactorings here and there. I tried to find a way to make them work
all the while keeping ENets features in use. Also, ENet uses the sessionID variable to keep track of the connection, but Photon
uses the challenge variable. Photon Marks the packets as reliable by using the command flags and CommandType.</p>
<div class="theme-tabs-container tabs-container tabList__CuJ"><ul role="tablist" aria-orientation="horizontal" class="tabs"><li role="tab" tabindex="0" aria-selected="true" class="tabs__item tabItem_LNqP tabs__item--active">ENet</li><li role="tab" tabindex="-1" aria-selected="false" class="tabs__item tabItem_LNqP">Photon</li></ul><div class="margin-top--md"><div role="tabpanel" class="tabItem_Ymn6"><div class="language-csharp codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-csharp codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token comment" style="color:#999988;font-style:italic">// 8 bytes</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">public</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">struct</span><span class="token plain"> </span><span class="token class-name">ENetProtocolHeader</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">public</span><span class="token plain"> </span><span class="token class-name keyword" style="color:#00009f">ushort</span><span class="token plain"> peerID</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">public</span><span class="token plain"> </span><span class="token class-name keyword" style="color:#00009f">ushort</span><span class="token plain"> sentTime</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">// 6 bytes</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">public</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">struct</span><span class="token plain"> </span><span class="token class-name">ENetProtocolCommandHeader</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">public</span><span class="token plain"> </span><span class="token class-name keyword" style="color:#00009f">byte</span><span class="token plain"> command</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">public</span><span class="token plain"> </span><span class="token class-name keyword" style="color:#00009f">byte</span><span class="token plain"> channelID</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">public</span><span class="token plain"> </span><span class="token class-name keyword" style="color:#00009f">uint</span><span class="token plain"> reliableSequenceNumber</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre></div></div></div><div role="tabpanel" class="tabItem_Ymn6" hidden=""><div class="language-csharp codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-csharp codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token comment" style="color:#999988;font-style:italic">// 12 bytes</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">public</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">struct</span><span class="token plain"> </span><span class="token class-name">PhotonProtocolHeader</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">public</span><span class="token plain"> </span><span class="token class-name keyword" style="color:#00009f">ushort</span><span class="token plain"> peerID</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">public</span><span class="token plain"> </span><span class="token class-name keyword" style="color:#00009f">byte</span><span class="token plain"> crcEnabled</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">public</span><span class="token plain"> </span><span class="token class-name keyword" style="color:#00009f">byte</span><span class="token plain"> commandCount</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">public</span><span class="token plain"> </span><span class="token class-name keyword" style="color:#00009f">uint</span><span class="token plain"> sentTime</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">public</span><span class="token plain"> </span><span class="token class-name keyword" style="color:#00009f">uint</span><span class="token plain"> challenge</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">// 12 bytes</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">public</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">struct</span><span class="token plain"> </span><span class="token class-name">PhotonProtocolCommandHeader</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">public</span><span class="token plain"> </span><span class="token class-name keyword" style="color:#00009f">byte</span><span class="token plain"> commandType</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">public</span><span class="token plain"> </span><span class="token class-name keyword" style="color:#00009f">byte</span><span class="token plain"> channelID</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">public</span><span class="token plain"> </span><span class="token class-name keyword" style="color:#00009f">byte</span><span class="token plain"> commandFlags</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">public</span><span class="token plain"> </span><span class="token class-name keyword" style="color:#00009f">byte</span><span class="token plain"> reservedBytes</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">public</span><span class="token plain"> </span><span class="token class-name keyword" style="color:#00009f">uint</span><span class="token plain"> commandLen</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">public</span><span class="token plain"> </span><span class="token class-name keyword" style="color:#00009f">uint</span><span class="token plain"> reliableSequenceNumber</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre></div></div></div></div></div>
<h5 class="anchor anchorTargetStickyNavbar_Vzrq" id="connection-handshake-commands">Connection handshake commands<a href="https://katumies.github.io/shroudserver-site/blog/2025/10/19/enet-modifications#connection-handshake-commands" class="hash-link" aria-label="Direct link to Connection handshake commands" title="Direct link to Connection handshake commands" translate="no">​</a></h5>
<p>ENet has a very different connection handshake. ENet sends tons of data and uses fields that are not present in Photon.
ENet client decides its own ID, where as Photon uses incremental ID, assigned by the server.
SotA clients PUN sends very few fields, most of the "connect" data is 0.
Also, when the SotA client receives the "Verify connect" command, it basically ignores everything from the payload.
It only reads two first bytes of it as a peerID.</p>
<p>One big thing I had to change was that acknowledgement for the "connect" command has to be in the next message sent and
it has to be before "verify connect" in the list of commands. Client reads incoming commands in the order they are sent and if
"verify connect" is received before the "connect" is acknowledged, it sends the "connect" command again. This is just a one example
of things that just have to be dug out with reverse engineering.</p>
<div class="theme-tabs-container tabs-container tabList__CuJ"><ul role="tablist" aria-orientation="horizontal" class="tabs"><li role="tab" tabindex="0" aria-selected="true" class="tabs__item tabItem_LNqP tabs__item--active">ENet</li><li role="tab" tabindex="-1" aria-selected="false" class="tabs__item tabItem_LNqP">Photon</li></ul><div class="margin-top--md"><div role="tabpanel" class="tabItem_Ymn6"><div class="language-csharp codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-csharp codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">public</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">struct</span><span class="token plain"> </span><span class="token class-name">ENetProtocolAcknowledge</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">public</span><span class="token plain"> </span><span class="token class-name">ENetProtocolCommandHeader</span><span class="token plain"> header</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">public</span><span class="token plain"> </span><span class="token class-name keyword" style="color:#00009f">uint</span><span class="token plain"> receivedReliableSequenceNumber</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">public</span><span class="token plain"> </span><span class="token class-name keyword" style="color:#00009f">ushort</span><span class="token plain"> receivedSentTime</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">public</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">struct</span><span class="token plain"> </span><span class="token class-name">ENetProtocolConnect</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">public</span><span class="token plain"> </span><span class="token class-name">ENetProtocolCommandHeader</span><span class="token plain"> header</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">public</span><span class="token plain"> </span><span class="token class-name keyword" style="color:#00009f">ushort</span><span class="token plain"> outgoingPeerID</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">public</span><span class="token plain"> </span><span class="token class-name keyword" style="color:#00009f">byte</span><span class="token plain"> incomingSessionID</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">public</span><span class="token plain"> </span><span class="token class-name keyword" style="color:#00009f">byte</span><span class="token plain"> outgoingSessionID</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">public</span><span class="token plain"> </span><span class="token class-name keyword" style="color:#00009f">uint</span><span class="token plain"> mtu</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">public</span><span class="token plain"> </span><span class="token class-name keyword" style="color:#00009f">uint</span><span class="token plain"> windowSize</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">public</span><span class="token plain"> </span><span class="token class-name keyword" style="color:#00009f">uint</span><span class="token plain"> channelCount</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">public</span><span class="token plain"> </span><span class="token class-name keyword" style="color:#00009f">uint</span><span class="token plain"> incomingBandwidth</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">public</span><span class="token plain"> </span><span class="token class-name keyword" style="color:#00009f">uint</span><span class="token plain"> outgoingBandwidth</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">public</span><span class="token plain"> </span><span class="token class-name keyword" style="color:#00009f">uint</span><span class="token plain"> packetThrottleInterval</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">public</span><span class="token plain"> </span><span class="token class-name keyword" style="color:#00009f">uint</span><span class="token plain"> packetThrottleAcceleration</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">public</span><span class="token plain"> </span><span class="token class-name keyword" style="color:#00009f">uint</span><span class="token plain"> packetThrottleDeceleration</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">public</span><span class="token plain"> </span><span class="token class-name keyword" style="color:#00009f">uint</span><span class="token plain"> connectID</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">public</span><span class="token plain"> </span><span class="token class-name keyword" style="color:#00009f">uint</span><span class="token plain"> data</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">public</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">struct</span><span class="token plain"> </span><span class="token class-name">ENetProtocolVerifyConnect</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">public</span><span class="token plain"> </span><span class="token class-name">ENetProtocolCommandHeader</span><span class="token plain"> header</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">public</span><span class="token plain"> </span><span class="token class-name keyword" style="color:#00009f">ushort</span><span class="token plain"> outgoingPeerID</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">public</span><span class="token plain"> </span><span class="token class-name keyword" style="color:#00009f">byte</span><span class="token plain"> incomingSessionID</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">public</span><span class="token plain"> </span><span class="token class-name keyword" style="color:#00009f">byte</span><span class="token plain"> outgoingSessionID</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">public</span><span class="token plain"> </span><span class="token class-name keyword" style="color:#00009f">uint</span><span class="token plain"> mtu</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">public</span><span class="token plain"> </span><span class="token class-name keyword" style="color:#00009f">uint</span><span class="token plain"> windowSize</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">public</span><span class="token plain"> </span><span class="token class-name keyword" style="color:#00009f">uint</span><span class="token plain"> channelCount</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">public</span><span class="token plain"> </span><span class="token class-name keyword" style="color:#00009f">uint</span><span class="token plain"> incomingBandwidth</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">public</span><span class="token plain"> </span><span class="token class-name keyword" style="color:#00009f">uint</span><span class="token plain"> outgoingBandwidth</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">public</span><span class="token plain"> </span><span class="token class-name keyword" style="color:#00009f">uint</span><span class="token plain"> packetThrottleInterval</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">public</span><span class="token plain"> </span><span class="token class-name keyword" style="color:#00009f">uint</span><span class="token plain"> packetThrottleAcceleration</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">public</span><span class="token plain"> </span><span class="token class-name keyword" style="color:#00009f">uint</span><span class="token plain"> packetThrottleDeceleration</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">public</span><span class="token plain"> </span><span class="token class-name keyword" style="color:#00009f">uint</span><span class="token plain"> connectID</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre></div></div></div><div role="tabpanel" class="tabItem_Ymn6" hidden=""><div class="language-csharp codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-csharp codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">public</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">struct</span><span class="token plain"> </span><span class="token class-name">PhotonProtocolAcknowledge</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">public</span><span class="token plain"> </span><span class="token class-name">PhotonProtocolCommandHeader</span><span class="token plain"> header</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">public</span><span class="token plain"> </span><span class="token class-name keyword" style="color:#00009f">uint</span><span class="token plain"> receivedReliableSequenceNumber</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">public</span><span class="token plain"> </span><span class="token class-name keyword" style="color:#00009f">uint</span><span class="token plain"> receivedSentTime</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">[</span><span class="token attribute class-name">StructLayout</span><span class="token attribute attribute-arguments punctuation" style="color:#393A34">(</span><span class="token attribute attribute-arguments">LayoutKind</span><span class="token attribute attribute-arguments punctuation" style="color:#393A34">.</span><span class="token attribute attribute-arguments">Sequential</span><span class="token attribute attribute-arguments punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">public</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">unsafe</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">struct</span><span class="token plain"> </span><span class="token class-name">PhotonProtocolConnect</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">public</span><span class="token plain"> </span><span class="token class-name">PhotonProtocolCommandHeader</span><span class="token plain"> header</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">public</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">fixed</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">byte</span><span class="token plain"> payload</span><span class="token punctuation" style="color:#393A34">[</span><span class="token number" style="color:#36acaa">32</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">[</span><span class="token attribute class-name">StructLayout</span><span class="token attribute attribute-arguments punctuation" style="color:#393A34">(</span><span class="token attribute attribute-arguments">LayoutKind</span><span class="token attribute attribute-arguments punctuation" style="color:#393A34">.</span><span class="token attribute attribute-arguments">Sequential</span><span class="token attribute attribute-arguments punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">public</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">unsafe</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">struct</span><span class="token plain"> </span><span class="token class-name">PhotonProtocolVerifyConnect</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">public</span><span class="token plain"> </span><span class="token class-name">PhotonProtocolCommandHeader</span><span class="token plain"> header</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">public</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">fixed</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">byte</span><span class="token plain"> payload</span><span class="token punctuation" style="color:#393A34">[</span><span class="token number" style="color:#36acaa">32</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre></div></div></div></div></div>
<h2 class="anchor anchorTargetStickyNavbar_Vzrq" id="the-final-result">The final result<a href="https://katumies.github.io/shroudserver-site/blog/2025/10/19/enet-modifications#the-final-result" class="hash-link" aria-label="Direct link to The final result" title="Direct link to The final result" translate="no">​</a></h2>
<p>What did I achieve?</p>
<p>ENet modifications allow it to work with SotA. I can start my server and listen to port 5057, and the client initiates the connection
handshake. ENet correctly responds, and the client accepts the connection. After that, the client starts to send the first actual messages to the server.
First messages are sent to LoggingServer. LoggingServer main functionality is to receive logs and to provide News of the day, internetradio urls and some minor things.
But it's the first server game connects to, and it works now.</p>
<p>The actual Peer in the ShroudServer application now receives the messages from the client. One of the first messages looks like this:</p>
<div class="language-hexdump codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-hexdump codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">F3 02 00 00 02 00 6C 00 00 00 00 66 28 19 81 02 63 01 00 6A 7B 22 30 22 3A 22 4C 6F 67</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">22 2C 22 31 22 3A 22 53 6F 74 41 2E 57 69 6E 2E 36 34 2E 31 37 39 38 2E 44 61 74 65 2E</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">31 30 2E 30 36 2E 32 35 2C 20 4C 6F 63 61 6C 54 69 6D 65 3D 31 38 2F 31 30 2F 32 30 32</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">35 20 32 32 3A 30 33 3A 35 33 2C 20 50 61 74 63 68 3D 42 61 63 6B 54 6F 53 71 75 69 72</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">72 65 6C 2E 32 30 32 35 22 7D</span><br></span></code></pre></div></div>
<p>And after bit of parsing</p>
<div class="language-json codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-json codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token property" style="color:#36acaa">"0"</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"Log"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token property" style="color:#36acaa">"1"</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"SotA.Win.64.1798.Date.10.06.25, LocalTime=18/10/2025 22:03:53, Patch=BackToSquirrel.2025"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre></div></div>
<p>This is an actual message from the client. After all this hassle, it does not seem like a big deal, but getting here was a lot of work.</p>
<h2 class="anchor anchorTargetStickyNavbar_Vzrq" id="next-steps">Next steps?<a href="https://katumies.github.io/shroudserver-site/blog/2025/10/19/enet-modifications#next-steps" class="hash-link" aria-label="Direct link to Next steps?" title="Direct link to Next steps?" translate="no">​</a></h2>
<p>Before I threw the Photon server away, I had all the logging server functionality working and login sequence.
Because Photon SDK uses .Net 4.8, I had to create a slimy, disgusting bridge between Photon and my ShroudServer.
ShroudServer is using latest of everything and those are not compatible. Bridge was done with REST. I now have to create a proper
communication layer between my Enet server and the actual ShroudServer. It's not a big deal, but it's the next step.</p>
<p>After I get the bridge working, the client should be able to send logging data and receive news of the day etc. from the ShroudServer.
Also, login should work. When I say login, I mean the actual login sequence, nothing more. There's tons of things to do, before client actually loads
to main world.</p>
<p>If you read all this, I hope you enjoyed it. These are something I use to reiterate what I did, so I can remember what I did.</p>
<p>-Katu</p>]]></content:encoded>
            <category>me</category>
            <category>csharp</category>
            <category>networking</category>
            <category>enet</category>
        </item>
        <item>
            <title><![CDATA[Welcome to ShroudServer devblog]]></title>
            <link>https://katumies.github.io/shroudserver-site/blog/welcome</link>
            <guid>https://katumies.github.io/shroudserver-site/blog/welcome</guid>
            <pubDate>Thu, 16 Oct 2025 00:00:00 GMT</pubDate>
            <description><![CDATA[An introduction to my project.]]></description>
            <content:encoded><![CDATA[<h2 class="anchor anchorTargetStickyNavbar_Vzrq" id="shroudserver">ShroudServer<a href="https://katumies.github.io/shroudserver-site/blog/welcome#shroudserver" class="hash-link" aria-label="Direct link to ShroudServer" title="Direct link to ShroudServer" translate="no">​</a></h2>
<p>This blog follows development of a private server for Shroud of the Avatar game. It's very much work in progress, but it's coming along nicely.</p>
<p>ShroudServer is hobby project of mine and the target is to create privately hostable server for Shroud of the avatar game. It's still very early in development, but certain things, that are techically the hardest, are in good shape and coming up nicely. I assume that readers know something about the game and I might say some keywords that only work in context of the game.</p>
<p>I started this blog, to record my doings and to report what is being done. There will be lots of techical jargon and something else, that can be more easily be digested. I'm willing to share everything I know about the networking and about the needed simulations. I have no fear that someone would try learn this and create their own implementation, infact, this is such a huge task that anyone willing to learn this, sounds good idea to me. I will share detailed information about my findings about network and everything related to the project.</p>
<h3 class="anchor anchorTargetStickyNavbar_Vzrq" id="tiny-disclaimer">Tiny disclaimer<a href="https://katumies.github.io/shroudserver-site/blog/welcome#tiny-disclaimer" class="hash-link" aria-label="Direct link to Tiny disclaimer" title="Direct link to Tiny disclaimer" translate="no">​</a></h3>
<p>All the code I have in project, is done by me, everything else is MIT licensed libraries and tools. I don't have access to the real server code nor have I ever had. I have not copied any code that is not free to use. I do not represent any company or ideology. It's just my hobby project, that for now, only lives on my own development environment.</p>
<h3 class="anchor anchorTargetStickyNavbar_Vzrq" id="tiny-about-me">Tiny About me<a href="https://katumies.github.io/shroudserver-site/blog/welcome#tiny-about-me" class="hash-link" aria-label="Direct link to Tiny About me" title="Direct link to Tiny About me" translate="no">​</a></h3>
<p>I'm Katu, finnish software developer. I have programmed most of my live, in numbers, about 30 years, half of it professionally. I love programming and pushing my self to learn more and more, and thats where this project also started. I have tons of kids and fulltime job, so my freetime for coding is somewhat limited.</p>
<h3 class="anchor anchorTargetStickyNavbar_Vzrq" id="beginnings-of-the-shroudserver">Beginnings of the ShroudServer<a href="https://katumies.github.io/shroudserver-site/blog/welcome#beginnings-of-the-shroudserver" class="hash-link" aria-label="Direct link to Beginnings of the ShroudServer" title="Direct link to Beginnings of the ShroudServer" translate="no">​</a></h3>
<p>I played the game, Shroud of the Avatar for a good time and many things in the game clicked with me. It pulled me in with endless character templates, somewhat innovative combat system, player owned towns and houses. But, developers of the game, were streched all over the board, everything was in the making, yet nothing was ever done. I did not like some of the decisions made and nowadays just feel bad about the state of the game.</p>
<p>Sota has a fascinating architecture ( don't get too exited, the actual architecture is not fun ) when considering the fact that you can play the game offline and enjoy most of the features without server connection. This led me to think, that maybe the server is not doing that much of work and it could be faked somehow, easily.. (spoiler, not easy)</p>
<h3 class="anchor anchorTargetStickyNavbar_Vzrq" id="i-had-an-idea">I had an idea!<a href="https://katumies.github.io/shroudserver-site/blog/welcome#i-had-an-idea" class="hash-link" aria-label="Direct link to I had an idea!" title="Direct link to I had an idea!" translate="no">​</a></h3>
<p>I'll write an private server for the game. Actually, it was not so clear at the time, considering that this happened somewhere between 2021-2022 and just now, It has become clear, that I could actually do this.
BUT, I found the good old spark, that has pushed me forward so many times before. Time to learn something new.</p>
<p>Fast forward to this day and I have gone through few different iterations and I'm finally thinking, that this is it. I'm doing it.</p>
<p>This was supposed to be short introduction to the blog and I will try to write about tech, architecture ( game and server ) and most importantly, about the progress. I can't promise any deadlines or anykind of set dates for anything basically.</p>]]></content:encoded>
            <category>me</category>
            <category>csharp</category>
            <category>networking</category>
            <category>enet</category>
        </item>
    </channel>
</rss>