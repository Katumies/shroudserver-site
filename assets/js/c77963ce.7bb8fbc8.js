"use strict";(globalThis.webpackChunkshroudserver=globalThis.webpackChunkshroudserver||[]).push([[80],{6186:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>a,default:()=>h,frontMatter:()=>s,metadata:()=>r,toc:()=>l});const r=JSON.parse('{"id":"networking-basics/photon-udp","title":"Photon Networking","description":"Overview","source":"@site/docs/networking-basics/photon-udp.md","sourceDirName":"networking-basics","slug":"/networking-basics/photon-udp","permalink":"/shroudserver-site/docs/networking-basics/photon-udp","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":3,"frontMatter":{"sidebar_label":"Photon Networking - UDP","sidebar_position":3},"sidebar":"tutorialSidebar","previous":{"title":"Photon Networking","permalink":"/shroudserver-site/docs/networking-basics/photon"},"next":{"title":"Photon Networking - ENet","permalink":"/shroudserver-site/docs/networking-basics/enet-csharp"}}');var o=n(4848),i=n(8453);const s={sidebar_label:"Photon Networking - UDP",sidebar_position:3},a="Photon Networking",c={},l=[{value:"Overview",id:"overview",level:2},{value:"UDP protocol basics",id:"udp-protocol-basics",level:3},{value:"Photon UDP protocol",id:"photon-udp-protocol",level:3},{value:"Packet structure",id:"packet-structure",level:4}];function d(e){const t={a:"a",admonition:"admonition",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",mermaid:"mermaid",p:"p",...(0,i.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(t.header,{children:(0,o.jsx)(t.h1,{id:"photon-networking",children:"Photon Networking"})}),"\n",(0,o.jsx)(t.h2,{id:"overview",children:"Overview"}),"\n",(0,o.jsx)(t.p,{children:"Scratching the surface of Photon UDP protocol"}),"\n",(0,o.jsx)(t.h3,{id:"udp-protocol-basics",children:"UDP protocol basics"}),"\n",(0,o.jsx)(t.p,{children:"UDP is a connectionless protocol, that does not guarantee delivery of packets. It's up to the application to handle packet loss, ordering, and reliability.\r\nUDP is commonly used in real-time applications, such as online games, where low latency is more important than reliability.\r\nUDP packets are limited to 65,507 bytes in size, but in practice, the maximum size is much smaller due to network MTU (maximum transmission unit) limits. The typical MTU for Ethernet is 1500 bytes, which means that UDP packets larger than this size will be fragmented into multiple packets."}),"\n",(0,o.jsx)(t.h3,{id:"photon-udp-protocol",children:"Photon UDP protocol"}),"\n",(0,o.jsxs)(t.p,{children:["Photon UDP protocol is built on top of UDP, and provides additional features such as reliability, ordering, and fragmentation.\r\nAs mentioned before, it is based on ",(0,o.jsx)(t.a,{href:"http://enet.bespin.org/",children:"ENet"}),", a reliable UDP networking library."]}),"\n",(0,o.jsx)(t.h4,{id:"packet-structure",children:"Packet structure"}),"\n",(0,o.jsxs)(t.p,{children:[(0,o.jsx)(t.a,{href:"https://en.wikipedia.org/wiki/User_Datagram_Protocol",children:"UDP"})," packet, is made up of a header and a payload.\r\nThere's few different packet types, that photon uses and they all share the same header structure."]}),"\n",(0,o.jsx)(t.p,{children:"Here's a breakdown of the UDP packet structure used by Photon."}),"\n",(0,o.jsx)(t.mermaid,{value:"---\r\ntitle: Photon protocol\r\n---\r\nerDiagram\r\n    PacketHeader {\r\n        ushort peerID\r\n        byte crcEnabled\r\n        byte commandCount\r\n        uint sentTime\r\n        uint challenge\r\n    }\r\n\r\n    CommandHeader {\r\n        byte commandType\r\n        byte channelID\r\n        byte commandFlags\r\n        byte reservedBytes\r\n        uint commandLen\r\n        uint reliableSequenceNumber\r\n    }\r\n    \r\n    AcknowledgeCommand {\r\n        uint receivedReliableSequenceNumber\r\n        uint receivedSentTime\r\n    }\r\n"}),"\n",(0,o.jsx)(t.p,{children:"From this structure, we can match the incoming packet to peer ( peer is a structure, representing a connection and its state.\r\nI will later on, brake this down more, but for now, this serves as introduction."}),"\n",(0,o.jsx)(t.admonition,{type:"note",children:(0,o.jsx)(t.p,{children:"Every packet starts with a PacketHeader, followed by one or more CommandHeader-command pairs."})})]})}function h(e={}){const{wrapper:t}={...(0,i.R)(),...e.components};return t?(0,o.jsx)(t,{...e,children:(0,o.jsx)(d,{...e})}):d(e)}},8453:(e,t,n)=>{n.d(t,{R:()=>s,x:()=>a});var r=n(6540);const o={},i=r.createContext(o);function s(e){const t=r.useContext(i);return r.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:s(e.components),r.createElement(i.Provider,{value:t},e.children)}}}]);